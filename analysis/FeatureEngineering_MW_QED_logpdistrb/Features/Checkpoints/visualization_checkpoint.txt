# -*- coding: utf-8 -*-
"""visualization-checkpoint.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kH1PWSxm98U4tmXUJMbbhP_6s5cYjwUd
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
sns.set()

from sklearn.manifold import TSNE
from sklearn.preprocessing import StandardScaler
from sklearn.decomposition import PCA
from sklearn.cluster import spectral_clustering

data = pd.read_csv('qm9_feature_data.csv')

"""for c in data.columns[:-1]:
    print('Variance of column {}: {}'.format(c, np.var(data[c])))
"""

data.drop('NumRadicalElectrons', axis = 1, inplace = True)
data.drop('NumAromaticCarbocycles', axis = 1, inplace = True)

plt.figure(figsize = (20, 20))
for i, c in enumerate(data.columns[:-1]):
    plt.subplot(4,4,(i + 1))
    sns.scatterplot(data[c].values, data.iloc[:,-1].values)
    plt.title('{} vs Heat Capacity'.format(c), fontsize = 12)

plt.show()

scaler = StandardScaler()
X = scaler.fit_transform(data.iloc[:,:-1].values)

tsne = TSNE()
X_tsne = tsne.fit_transform(X)

plt.subplot(1,2,1)
sns.scatterplot(X_tsne[:,0], data.iloc[:,-1].values)

plt.subplot(1,2,2)
sns.scatterplot(X_tsne[:,1], data.iloc[:,-1].values)

pca = PCA(n_components = 2)
X_pca = pca.fit_transform(X)

plt.subplot(1,2,1)
sns.scatterplot(X_pca[:,0], data.iloc[:,-1].values)

plt.subplot(1,2,2)
sns.scatterplot(X_pca[:,1], data.iloc[:,-1].values)
plt.show()

